::::Panel::::

init -> table, activity_list =>  [(activity, 1/0), ...],

toggle_checks -> add 1 for checked and 0 for unchecked

add_activity(activity_name) -> add a row in the activity section of the table, with checkboxes
remove_activity(activity_name) -> del a row in the activity section of the table.

modify_mood -> most likely from a selection of predefined moods

modify_percent_done -> from 0 to 100, making sure the user does not write down more or less.


::::Day:::: (this will be our day object to store data)

init -> activity_list = None, Mood = None, Percent = None, current_date


::::Timeline:::: (this will be our timeline object to store pointer of our days objects)

init -> empty dict to store our week datastructure {"week1", [day1, day2, day3, ...], "week2": ...}
        
::::Metrics:::: (activities, mood, and percent_done are just the metrics that I can think of...)

What if someone wanted to add another metric...

self.metrics = {}

add_metric(metric_string, inital_value) -> self.metrics[metric_string] = [] or 0 or {} or " " or another object if need be.


::::::STATS::::::

It seems difficult to merge a simple graph of mood tracking with another simple graph of habits tracking, the most simple solution is to use a graph with 3 variables, 2 in the Y-axis (mood and activities) and 1 in the X-axis (time)







